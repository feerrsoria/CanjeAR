/* components/AddProductCard/AddProductCard.module.css */

.container {
    display: flex;
    flex-direction: row; /* Desktop: side-by-side */
    gap: 3.5rem; /* Space between the card and the image */
    align-items: center; /* Vertically centers the two main blocks */
    justify-content: center; /* Horizontally centers the whole group on the page */
    padding: 3rem 1.5rem;
    min-height: calc(100vh - var(--header-height, 0px) - var(--footer-height, 0px)); /* Ensure container takes up full available height */
    box-sizing: border-box;
    flex-wrap: nowrap; /* Prevent wrapping on large screens */
    width: 100%; /* Ensure container takes full width */
    max-width: 1200px; /* Limit overall container width */
    margin: 0 auto; /* Center the container itself */
}

/* Styles for the card (left side) */
.card {
    background: var(--background, #ffffff);
    border-radius: 1.5rem;
    box-shadow: 0 8px 30px rgba(58, 44, 26, 0.15);
    display: flex;
    flex-direction: column;
    width: 480px; /* Fixed width for the card on desktop */
    padding: 2rem 3.5rem; /* Further reduced vertical padding for a more compact look */
    box-sizing: border-box;
    transition: box-shadow 0.3s ease-in-out;
    gap: 1.2rem;
    flex-shrink: 0;
    flex-grow: 0;
    min-height: 480px; /* Reduced min-height to make it less tall. Match the desired height for imageWrapper. */
    z-index: 1; /* Ensure card is on top */
}

.card:hover {
    box-shadow: 0 12px 40px rgba(58, 44, 26, 0.2);
}

.card h2 {
    font-size: 2.2rem;
    font-weight: 700;
    color: var(--text-color, #3a2c1a);
    margin-bottom: 0.5rem;
    text-align: center;
}

.card p {
    font-size: 1.1rem;
    color: var(--text-muted, #7a7a7a);
    margin-bottom: 2rem; /* Adjusted margin */
    text-align: center;
    line-height: 1.6;
}

.card label {
    font-weight: 600;
    color: var(--text-color, #3a2c1a);
    margin-top: 0.8rem;
    margin-bottom: 0.4rem;
    font-size: 0.95rem;
}

.card input[type="text"],
.card input[type="number"],
.card textarea {
    padding: 1.1rem 1.2rem;
    border: 2px solid var(--border-color, #e0e0e0);
    border-radius: 0.75rem;
    font-size: 1rem;
    color: var(--input-text-color, #333);
    background-color: var(--input-background, #f9f9f9);
    transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    width: 100%;
    box-sizing: border-box;
    margin-bottom: 1.2rem;
}

.card input[type="text"]:focus,
.card input[type="number"]:focus,
.card textarea:focus {
    outline: none;
    border-color: var(--primary, #e0ae71);
    box-shadow: 0 0 0 3px rgba(224, 174, 113, 0.2);
}

.card textarea {
    min-height: 70px; /* Further reduced min-height for textareas */
    resize: vertical;
}

.card button {
    background: var(--primary, #e0ae71);
    color: var(--button-text-color, #fff);
    padding: 1.2rem 1.8rem;
    border: none;
    border-radius: 0.75rem;
    font-size: 1.2rem;
    font-weight: 700;
    cursor: pointer;
    transition: background 0.2s ease-in-out, transform 0.1s ease-in-out;
    margin-top: 2rem; /* Adjusted margin-top */
    width: 100%;
}

.card button:hover {
    background: var(--primary-dark, #c99a61);
    transform: translateY(-2px);
}

.card button:active {
    transform: translateY(0);
}

/* Image Upload Section Styling */
.uploadSection {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 1.2rem;
}

.uploadButton {
    display: flex;
    align-items: center;
    justify-content: center;
    background: var(--primary-light, #f0d5bb);
    color: var(--primary-dark, #c99a61);
    padding: 0.8rem 1.2rem;
    border: 2px dashed var(--primary, #e0ae71);
    border-radius: 0.75rem;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: background 0.2s ease-in-out, border-color 0.2s ease-in-out;
}

.uploadButton:hover {
    background: var(--primary-accent, #f9e8d6);
    border-color: var(--primary-dark, #c99a61);
}

.uploadIcon {
    width: 24px;
    height: 24px;
    margin-right: 0.5rem;
}

.imagePreviews {
    display: flex;
    gap: 0.8rem;
    justify-content: space-between;
}

.imagePlaceholder {
    position: relative; /* Keep relative for Next/Image to fill it if needed, or if you use fill property later */
    width: 100px;
    height: 100px;
    border: 2px dashed var(--border-color, #e0e0e0);
    border-radius: 0.5rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background-color: var(--input-background, #f9f9f9);
    overflow: hidden;
    flex-shrink: 0;
}

.placeholderText {
    font-size: 2rem;
    color: var(--text-muted, #ccc);
    font-weight: 300;
}

/* Styles for the decorative image wrapper (right side) */
.imageWrapper {
    /* No position: relative needed here as Next/Image now has explicit width/height */
    width: 450px; /* Explicit width for the image container */
    height: 600px; /* Explicit height, to match the desired taller look */
    border-radius: 1.5rem;
    box-shadow: 0 8px 30px rgba(58, 44, 26, 0.15);
    border: 4px solid var(--primary, #e0ae71);
    overflow: hidden; /* Ensures image respects border-radius */
    flex-shrink: 0;
    flex-grow: 0;
    background-color: var(--background, #f9f9f9); /* Fallback background */
    z-index: 0;
    display: flex; /* Still useful for centering the image if its dimensions don't perfectly match its container */
    justify-content: center;
    align-items: center;
}

.decorativeImage {
    /* Apply object-fit directly to the img tag rendered by Next.js using its class */
    object-fit: cover; /* This replaces the deprecated objectFit prop on Next/Image */
    border-radius: 1rem; /* Apply radius to the image itself if desired */
    display: block; /* Ensure it's a block element */
    width: 100%; /* Make sure it takes the full width of its container */
    height: 100%; /* Make sure it takes the full height of its container */
}


/* --- Responsive Adjustments --- */
@media (max-width: 1024px) {
    .container {
        flex-direction: column; /* Stack vertically on smaller screens */
        padding: 2.5rem 1rem;
        min-height: auto;
        align-items: center;
        gap: 2.5rem;
        max-width: 100%;
    }

    .card {
        max-width: 90%;
        width: auto;
        min-height: auto;
        padding: 2rem;
    }

    .imageWrapper {
        width: 100%;
        height: 400px; /* Adjusted height for tablet view */
        max-width: 400px;
    }

    .imagePreviews {
        justify-content: center;
        flex-wrap: wrap;
    }

    .imagePlaceholder {
        width: 80px;
        height: 80px;
    }
}

@media (max-width: 768px) {
    .card {
        max-width: 95%;
        padding: 1.5rem;
    }

    .card h2 {
        font-size: 1.8rem;
    }

    .card p {
        font-size: 1rem;
        margin-bottom: 1.5rem;
    }

    .card button {
        padding: 1rem 1.5rem;
        font-size: 1.1rem;
    }
    .imageWrapper {
        height: 300px; /* Further adjust height for mobile */
    }
}

